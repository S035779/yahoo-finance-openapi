/*
Yahoo Finance

Yahoo Finance API specification

API version: 1.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yq1

import (
	"encoding/json"
)

// checks if the SparkResponseSparkResultInnerResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SparkResponseSparkResultInnerResponseInner{}

// SparkResponseSparkResultInnerResponseInner struct for SparkResponseSparkResultInnerResponseInner
type SparkResponseSparkResultInnerResponseInner struct {
	Meta *SparkResponseSparkResultInnerResponseInnerMeta `json:"meta,omitempty"`
	Timestamp []int32 `json:"timestamp,omitempty"`
	Indicators *SparkResponseSparkResultInnerResponseInnerIndicators `json:"indicators,omitempty"`
}

// NewSparkResponseSparkResultInnerResponseInner instantiates a new SparkResponseSparkResultInnerResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSparkResponseSparkResultInnerResponseInner() *SparkResponseSparkResultInnerResponseInner {
	this := SparkResponseSparkResultInnerResponseInner{}
	return &this
}

// NewSparkResponseSparkResultInnerResponseInnerWithDefaults instantiates a new SparkResponseSparkResultInnerResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSparkResponseSparkResultInnerResponseInnerWithDefaults() *SparkResponseSparkResultInnerResponseInner {
	this := SparkResponseSparkResultInnerResponseInner{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SparkResponseSparkResultInnerResponseInner) GetMeta() SparkResponseSparkResultInnerResponseInnerMeta {
	if o == nil || IsNil(o.Meta) {
		var ret SparkResponseSparkResultInnerResponseInnerMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SparkResponseSparkResultInnerResponseInner) GetMetaOk() (*SparkResponseSparkResultInnerResponseInnerMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SparkResponseSparkResultInnerResponseInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given SparkResponseSparkResultInnerResponseInnerMeta and assigns it to the Meta field.
func (o *SparkResponseSparkResultInnerResponseInner) SetMeta(v SparkResponseSparkResultInnerResponseInnerMeta) {
	o.Meta = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SparkResponseSparkResultInnerResponseInner) GetTimestamp() []int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret []int32
		return ret
	}
	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SparkResponseSparkResultInnerResponseInner) GetTimestampOk() ([]int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SparkResponseSparkResultInnerResponseInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given []int32 and assigns it to the Timestamp field.
func (o *SparkResponseSparkResultInnerResponseInner) SetTimestamp(v []int32) {
	o.Timestamp = v
}

// GetIndicators returns the Indicators field value if set, zero value otherwise.
func (o *SparkResponseSparkResultInnerResponseInner) GetIndicators() SparkResponseSparkResultInnerResponseInnerIndicators {
	if o == nil || IsNil(o.Indicators) {
		var ret SparkResponseSparkResultInnerResponseInnerIndicators
		return ret
	}
	return *o.Indicators
}

// GetIndicatorsOk returns a tuple with the Indicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SparkResponseSparkResultInnerResponseInner) GetIndicatorsOk() (*SparkResponseSparkResultInnerResponseInnerIndicators, bool) {
	if o == nil || IsNil(o.Indicators) {
		return nil, false
	}
	return o.Indicators, true
}

// HasIndicators returns a boolean if a field has been set.
func (o *SparkResponseSparkResultInnerResponseInner) HasIndicators() bool {
	if o != nil && !IsNil(o.Indicators) {
		return true
	}

	return false
}

// SetIndicators gets a reference to the given SparkResponseSparkResultInnerResponseInnerIndicators and assigns it to the Indicators field.
func (o *SparkResponseSparkResultInnerResponseInner) SetIndicators(v SparkResponseSparkResultInnerResponseInnerIndicators) {
	o.Indicators = &v
}

func (o SparkResponseSparkResultInnerResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SparkResponseSparkResultInnerResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Indicators) {
		toSerialize["indicators"] = o.Indicators
	}
	return toSerialize, nil
}

type NullableSparkResponseSparkResultInnerResponseInner struct {
	value *SparkResponseSparkResultInnerResponseInner
	isSet bool
}

func (v NullableSparkResponseSparkResultInnerResponseInner) Get() *SparkResponseSparkResultInnerResponseInner {
	return v.value
}

func (v *NullableSparkResponseSparkResultInnerResponseInner) Set(val *SparkResponseSparkResultInnerResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSparkResponseSparkResultInnerResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSparkResponseSparkResultInnerResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSparkResponseSparkResultInnerResponseInner(val *SparkResponseSparkResultInnerResponseInner) *NullableSparkResponseSparkResultInnerResponseInner {
	return &NullableSparkResponseSparkResultInnerResponseInner{value: val, isSet: true}
}

func (v NullableSparkResponseSparkResultInnerResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSparkResponseSparkResultInnerResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


