/*
 * Yahoo Finance
 *
 * Yahoo Finance API specification
 *
 * API version: 1.0.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yf

import (
	"encoding/json"
)

// QuoteResponse struct for QuoteResponse
type QuoteResponse struct {
	Result *[]QuoteResult `json:"result,omitempty"`
	Error *string `json:"error,omitempty"`
}

// NewQuoteResponse instantiates a new QuoteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteResponse() *QuoteResponse {
	this := QuoteResponse{}
	return &this
}

// NewQuoteResponseWithDefaults instantiates a new QuoteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteResponseWithDefaults() *QuoteResponse {
	this := QuoteResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *QuoteResponse) GetResult() []QuoteResult {
	if o == nil || o.Result == nil {
		var ret []QuoteResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetResultOk() (*[]QuoteResult, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *QuoteResponse) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given []QuoteResult and assigns it to the Result field.
func (o *QuoteResponse) SetResult(v []QuoteResult) {
	o.Result = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *QuoteResponse) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *QuoteResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *QuoteResponse) SetError(v string) {
	o.Error = &v
}

func (o QuoteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableQuoteResponse struct {
	value *QuoteResponse
	isSet bool
}

func (v NullableQuoteResponse) Get() *QuoteResponse {
	return v.value
}

func (v *NullableQuoteResponse) Set(val *QuoteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteResponse(val *QuoteResponse) *NullableQuoteResponse {
	return &NullableQuoteResponse{value: val, isSet: true}
}

func (v NullableQuoteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


