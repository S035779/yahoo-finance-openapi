/*
 * Yahoo Finance
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yf

import (
	"encoding/json"
	"fmt"
)

// Range the model 'Range'
type Range string

// List of Range
const (
	RANGE__1D Range = "1d"
	RANGE__5D Range = "5d"
	RANGE__1MO Range = "1mo"
	RANGE__3MO Range = "3mo"
	RANGE__6MO Range = "6mo"
	RANGE__1Y Range = "1y"
	RANGE__2Y Range = "2y"
	RANGE__5Y Range = "5y"
	RANGE__10Y Range = "10y"
	RANGE_YTD Range = "ytd"
	RANGE_MAX Range = "max"
)

func (v *Range) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Range(value)
	for _, existing := range []Range{ "1d", "5d", "1mo", "3mo", "6mo", "1y", "2y", "5y", "10y", "ytd", "max",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Range", value)
}

// Ptr returns reference to Range value
func (v Range) Ptr() *Range {
	return &v
}

type NullableRange struct {
	value *Range
	isSet bool
}

func (v NullableRange) Get() *Range {
	return v.value
}

func (v *NullableRange) Set(val *Range) {
	v.value = val
	v.isSet = true
}

func (v NullableRange) IsSet() bool {
	return v.isSet
}

func (v *NullableRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRange(val *Range) *NullableRange {
	return &NullableRange{value: val, isSet: true}
}

func (v NullableRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

