/*
 * Yahoo Finance
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yf

import (
	"encoding/json"
)

// ChartMetaCurrentTradingPeriod struct for ChartMetaCurrentTradingPeriod
type ChartMetaCurrentTradingPeriod struct {
	Pre *ChartMetaCurrentTradingPeriodPre `json:"pre,omitempty"`
	Regular *ChartMetaCurrentTradingPeriodRegular `json:"regular,omitempty"`
	Post *ChartMetaCurrentTradingPeriodPost `json:"post,omitempty"`
}

// NewChartMetaCurrentTradingPeriod instantiates a new ChartMetaCurrentTradingPeriod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChartMetaCurrentTradingPeriod() *ChartMetaCurrentTradingPeriod {
	this := ChartMetaCurrentTradingPeriod{}
	return &this
}

// NewChartMetaCurrentTradingPeriodWithDefaults instantiates a new ChartMetaCurrentTradingPeriod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChartMetaCurrentTradingPeriodWithDefaults() *ChartMetaCurrentTradingPeriod {
	this := ChartMetaCurrentTradingPeriod{}
	return &this
}

// GetPre returns the Pre field value if set, zero value otherwise.
func (o *ChartMetaCurrentTradingPeriod) GetPre() ChartMetaCurrentTradingPeriodPre {
	if o == nil || o.Pre == nil {
		var ret ChartMetaCurrentTradingPeriodPre
		return ret
	}
	return *o.Pre
}

// GetPreOk returns a tuple with the Pre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartMetaCurrentTradingPeriod) GetPreOk() (*ChartMetaCurrentTradingPeriodPre, bool) {
	if o == nil || o.Pre == nil {
		return nil, false
	}
	return o.Pre, true
}

// HasPre returns a boolean if a field has been set.
func (o *ChartMetaCurrentTradingPeriod) HasPre() bool {
	if o != nil && o.Pre != nil {
		return true
	}

	return false
}

// SetPre gets a reference to the given ChartMetaCurrentTradingPeriodPre and assigns it to the Pre field.
func (o *ChartMetaCurrentTradingPeriod) SetPre(v ChartMetaCurrentTradingPeriodPre) {
	o.Pre = &v
}

// GetRegular returns the Regular field value if set, zero value otherwise.
func (o *ChartMetaCurrentTradingPeriod) GetRegular() ChartMetaCurrentTradingPeriodRegular {
	if o == nil || o.Regular == nil {
		var ret ChartMetaCurrentTradingPeriodRegular
		return ret
	}
	return *o.Regular
}

// GetRegularOk returns a tuple with the Regular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartMetaCurrentTradingPeriod) GetRegularOk() (*ChartMetaCurrentTradingPeriodRegular, bool) {
	if o == nil || o.Regular == nil {
		return nil, false
	}
	return o.Regular, true
}

// HasRegular returns a boolean if a field has been set.
func (o *ChartMetaCurrentTradingPeriod) HasRegular() bool {
	if o != nil && o.Regular != nil {
		return true
	}

	return false
}

// SetRegular gets a reference to the given ChartMetaCurrentTradingPeriodRegular and assigns it to the Regular field.
func (o *ChartMetaCurrentTradingPeriod) SetRegular(v ChartMetaCurrentTradingPeriodRegular) {
	o.Regular = &v
}

// GetPost returns the Post field value if set, zero value otherwise.
func (o *ChartMetaCurrentTradingPeriod) GetPost() ChartMetaCurrentTradingPeriodPost {
	if o == nil || o.Post == nil {
		var ret ChartMetaCurrentTradingPeriodPost
		return ret
	}
	return *o.Post
}

// GetPostOk returns a tuple with the Post field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartMetaCurrentTradingPeriod) GetPostOk() (*ChartMetaCurrentTradingPeriodPost, bool) {
	if o == nil || o.Post == nil {
		return nil, false
	}
	return o.Post, true
}

// HasPost returns a boolean if a field has been set.
func (o *ChartMetaCurrentTradingPeriod) HasPost() bool {
	if o != nil && o.Post != nil {
		return true
	}

	return false
}

// SetPost gets a reference to the given ChartMetaCurrentTradingPeriodPost and assigns it to the Post field.
func (o *ChartMetaCurrentTradingPeriod) SetPost(v ChartMetaCurrentTradingPeriodPost) {
	o.Post = &v
}

func (o ChartMetaCurrentTradingPeriod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pre != nil {
		toSerialize["pre"] = o.Pre
	}
	if o.Regular != nil {
		toSerialize["regular"] = o.Regular
	}
	if o.Post != nil {
		toSerialize["post"] = o.Post
	}
	return json.Marshal(toSerialize)
}

type NullableChartMetaCurrentTradingPeriod struct {
	value *ChartMetaCurrentTradingPeriod
	isSet bool
}

func (v NullableChartMetaCurrentTradingPeriod) Get() *ChartMetaCurrentTradingPeriod {
	return v.value
}

func (v *NullableChartMetaCurrentTradingPeriod) Set(val *ChartMetaCurrentTradingPeriod) {
	v.value = val
	v.isSet = true
}

func (v NullableChartMetaCurrentTradingPeriod) IsSet() bool {
	return v.isSet
}

func (v *NullableChartMetaCurrentTradingPeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChartMetaCurrentTradingPeriod(val *ChartMetaCurrentTradingPeriod) *NullableChartMetaCurrentTradingPeriod {
	return &NullableChartMetaCurrentTradingPeriod{value: val, isSet: true}
}

func (v NullableChartMetaCurrentTradingPeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChartMetaCurrentTradingPeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


