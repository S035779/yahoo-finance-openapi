/*
Yahoo Finance

Yahoo Finance API specification

API version: 1.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yq2

import (
	"encoding/json"
)

// checks if the QuoteSummaryResultInnerCalendarEvents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteSummaryResultInnerCalendarEvents{}

// QuoteSummaryResultInnerCalendarEvents struct for QuoteSummaryResultInnerCalendarEvents
type QuoteSummaryResultInnerCalendarEvents struct {
	MaxAge *int32 `json:"maxAge,omitempty"`
	Earnings *QuoteSummaryResultInnerCalendarEventsEarnings `json:"earnings,omitempty"`
	ExDividendDate *string `json:"exDividendDate,omitempty"`
	DividendDate *string `json:"dividendDate,omitempty"`
}

// NewQuoteSummaryResultInnerCalendarEvents instantiates a new QuoteSummaryResultInnerCalendarEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteSummaryResultInnerCalendarEvents() *QuoteSummaryResultInnerCalendarEvents {
	this := QuoteSummaryResultInnerCalendarEvents{}
	return &this
}

// NewQuoteSummaryResultInnerCalendarEventsWithDefaults instantiates a new QuoteSummaryResultInnerCalendarEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteSummaryResultInnerCalendarEventsWithDefaults() *QuoteSummaryResultInnerCalendarEvents {
	this := QuoteSummaryResultInnerCalendarEvents{}
	return &this
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *QuoteSummaryResultInnerCalendarEvents) GetMaxAge() int32 {
	if o == nil || IsNil(o.MaxAge) {
		var ret int32
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) GetMaxAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxAge) {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) HasMaxAge() bool {
	if o != nil && !IsNil(o.MaxAge) {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int32 and assigns it to the MaxAge field.
func (o *QuoteSummaryResultInnerCalendarEvents) SetMaxAge(v int32) {
	o.MaxAge = &v
}

// GetEarnings returns the Earnings field value if set, zero value otherwise.
func (o *QuoteSummaryResultInnerCalendarEvents) GetEarnings() QuoteSummaryResultInnerCalendarEventsEarnings {
	if o == nil || IsNil(o.Earnings) {
		var ret QuoteSummaryResultInnerCalendarEventsEarnings
		return ret
	}
	return *o.Earnings
}

// GetEarningsOk returns a tuple with the Earnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) GetEarningsOk() (*QuoteSummaryResultInnerCalendarEventsEarnings, bool) {
	if o == nil || IsNil(o.Earnings) {
		return nil, false
	}
	return o.Earnings, true
}

// HasEarnings returns a boolean if a field has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) HasEarnings() bool {
	if o != nil && !IsNil(o.Earnings) {
		return true
	}

	return false
}

// SetEarnings gets a reference to the given QuoteSummaryResultInnerCalendarEventsEarnings and assigns it to the Earnings field.
func (o *QuoteSummaryResultInnerCalendarEvents) SetEarnings(v QuoteSummaryResultInnerCalendarEventsEarnings) {
	o.Earnings = &v
}

// GetExDividendDate returns the ExDividendDate field value if set, zero value otherwise.
func (o *QuoteSummaryResultInnerCalendarEvents) GetExDividendDate() string {
	if o == nil || IsNil(o.ExDividendDate) {
		var ret string
		return ret
	}
	return *o.ExDividendDate
}

// GetExDividendDateOk returns a tuple with the ExDividendDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) GetExDividendDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExDividendDate) {
		return nil, false
	}
	return o.ExDividendDate, true
}

// HasExDividendDate returns a boolean if a field has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) HasExDividendDate() bool {
	if o != nil && !IsNil(o.ExDividendDate) {
		return true
	}

	return false
}

// SetExDividendDate gets a reference to the given string and assigns it to the ExDividendDate field.
func (o *QuoteSummaryResultInnerCalendarEvents) SetExDividendDate(v string) {
	o.ExDividendDate = &v
}

// GetDividendDate returns the DividendDate field value if set, zero value otherwise.
func (o *QuoteSummaryResultInnerCalendarEvents) GetDividendDate() string {
	if o == nil || IsNil(o.DividendDate) {
		var ret string
		return ret
	}
	return *o.DividendDate
}

// GetDividendDateOk returns a tuple with the DividendDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) GetDividendDateOk() (*string, bool) {
	if o == nil || IsNil(o.DividendDate) {
		return nil, false
	}
	return o.DividendDate, true
}

// HasDividendDate returns a boolean if a field has been set.
func (o *QuoteSummaryResultInnerCalendarEvents) HasDividendDate() bool {
	if o != nil && !IsNil(o.DividendDate) {
		return true
	}

	return false
}

// SetDividendDate gets a reference to the given string and assigns it to the DividendDate field.
func (o *QuoteSummaryResultInnerCalendarEvents) SetDividendDate(v string) {
	o.DividendDate = &v
}

func (o QuoteSummaryResultInnerCalendarEvents) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteSummaryResultInnerCalendarEvents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxAge) {
		toSerialize["maxAge"] = o.MaxAge
	}
	if !IsNil(o.Earnings) {
		toSerialize["earnings"] = o.Earnings
	}
	if !IsNil(o.ExDividendDate) {
		toSerialize["exDividendDate"] = o.ExDividendDate
	}
	if !IsNil(o.DividendDate) {
		toSerialize["dividendDate"] = o.DividendDate
	}
	return toSerialize, nil
}

type NullableQuoteSummaryResultInnerCalendarEvents struct {
	value *QuoteSummaryResultInnerCalendarEvents
	isSet bool
}

func (v NullableQuoteSummaryResultInnerCalendarEvents) Get() *QuoteSummaryResultInnerCalendarEvents {
	return v.value
}

func (v *NullableQuoteSummaryResultInnerCalendarEvents) Set(val *QuoteSummaryResultInnerCalendarEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteSummaryResultInnerCalendarEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteSummaryResultInnerCalendarEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteSummaryResultInnerCalendarEvents(val *QuoteSummaryResultInnerCalendarEvents) *NullableQuoteSummaryResultInnerCalendarEvents {
	return &NullableQuoteSummaryResultInnerCalendarEvents{value: val, isSet: true}
}

func (v NullableQuoteSummaryResultInnerCalendarEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteSummaryResultInnerCalendarEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


