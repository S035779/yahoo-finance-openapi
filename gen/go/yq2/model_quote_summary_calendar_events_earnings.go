/*
 * Yahoo Finance
 *
 * Yahoo Finance API specification
 *
 * API version: 1.0.8
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yq2

import (
	"encoding/json"
)

// QuoteSummaryCalendarEventsEarnings struct for QuoteSummaryCalendarEventsEarnings
type QuoteSummaryCalendarEventsEarnings struct {
	EarningsDate *[]QuoteSummaryDefaultKeyStatisticsSharesShortPreviousMonthDate `json:"earningsDate,omitempty"`
	EarningsAverage *QuoteSummaryEsgScoresTotalEsg `json:"earningsAverage,omitempty"`
	EarningsLow *QuoteSummaryEsgScoresTotalEsg `json:"earningsLow,omitempty"`
	EarningsHigh *QuoteSummaryEsgScoresTotalEsg `json:"earningsHigh,omitempty"`
	RevenueAverage *QuoteSummaryDefaultKeyStatisticsEnterpriseValue `json:"revenueAverage,omitempty"`
	RevenueLow *QuoteSummaryDefaultKeyStatisticsEnterpriseValue `json:"revenueLow,omitempty"`
	RevenueHigh *QuoteSummaryDefaultKeyStatisticsEnterpriseValue `json:"revenueHigh,omitempty"`
}

// NewQuoteSummaryCalendarEventsEarnings instantiates a new QuoteSummaryCalendarEventsEarnings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteSummaryCalendarEventsEarnings() *QuoteSummaryCalendarEventsEarnings {
	this := QuoteSummaryCalendarEventsEarnings{}
	return &this
}

// NewQuoteSummaryCalendarEventsEarningsWithDefaults instantiates a new QuoteSummaryCalendarEventsEarnings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteSummaryCalendarEventsEarningsWithDefaults() *QuoteSummaryCalendarEventsEarnings {
	this := QuoteSummaryCalendarEventsEarnings{}
	return &this
}

// GetEarningsDate returns the EarningsDate field value if set, zero value otherwise.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsDate() []QuoteSummaryDefaultKeyStatisticsSharesShortPreviousMonthDate {
	if o == nil || o.EarningsDate == nil {
		var ret []QuoteSummaryDefaultKeyStatisticsSharesShortPreviousMonthDate
		return ret
	}
	return *o.EarningsDate
}

// GetEarningsDateOk returns a tuple with the EarningsDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsDateOk() (*[]QuoteSummaryDefaultKeyStatisticsSharesShortPreviousMonthDate, bool) {
	if o == nil || o.EarningsDate == nil {
		return nil, false
	}
	return o.EarningsDate, true
}

// HasEarningsDate returns a boolean if a field has been set.
func (o *QuoteSummaryCalendarEventsEarnings) HasEarningsDate() bool {
	if o != nil && o.EarningsDate != nil {
		return true
	}

	return false
}

// SetEarningsDate gets a reference to the given []QuoteSummaryDefaultKeyStatisticsSharesShortPreviousMonthDate and assigns it to the EarningsDate field.
func (o *QuoteSummaryCalendarEventsEarnings) SetEarningsDate(v []QuoteSummaryDefaultKeyStatisticsSharesShortPreviousMonthDate) {
	o.EarningsDate = &v
}

// GetEarningsAverage returns the EarningsAverage field value if set, zero value otherwise.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsAverage() QuoteSummaryEsgScoresTotalEsg {
	if o == nil || o.EarningsAverage == nil {
		var ret QuoteSummaryEsgScoresTotalEsg
		return ret
	}
	return *o.EarningsAverage
}

// GetEarningsAverageOk returns a tuple with the EarningsAverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsAverageOk() (*QuoteSummaryEsgScoresTotalEsg, bool) {
	if o == nil || o.EarningsAverage == nil {
		return nil, false
	}
	return o.EarningsAverage, true
}

// HasEarningsAverage returns a boolean if a field has been set.
func (o *QuoteSummaryCalendarEventsEarnings) HasEarningsAverage() bool {
	if o != nil && o.EarningsAverage != nil {
		return true
	}

	return false
}

// SetEarningsAverage gets a reference to the given QuoteSummaryEsgScoresTotalEsg and assigns it to the EarningsAverage field.
func (o *QuoteSummaryCalendarEventsEarnings) SetEarningsAverage(v QuoteSummaryEsgScoresTotalEsg) {
	o.EarningsAverage = &v
}

// GetEarningsLow returns the EarningsLow field value if set, zero value otherwise.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsLow() QuoteSummaryEsgScoresTotalEsg {
	if o == nil || o.EarningsLow == nil {
		var ret QuoteSummaryEsgScoresTotalEsg
		return ret
	}
	return *o.EarningsLow
}

// GetEarningsLowOk returns a tuple with the EarningsLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsLowOk() (*QuoteSummaryEsgScoresTotalEsg, bool) {
	if o == nil || o.EarningsLow == nil {
		return nil, false
	}
	return o.EarningsLow, true
}

// HasEarningsLow returns a boolean if a field has been set.
func (o *QuoteSummaryCalendarEventsEarnings) HasEarningsLow() bool {
	if o != nil && o.EarningsLow != nil {
		return true
	}

	return false
}

// SetEarningsLow gets a reference to the given QuoteSummaryEsgScoresTotalEsg and assigns it to the EarningsLow field.
func (o *QuoteSummaryCalendarEventsEarnings) SetEarningsLow(v QuoteSummaryEsgScoresTotalEsg) {
	o.EarningsLow = &v
}

// GetEarningsHigh returns the EarningsHigh field value if set, zero value otherwise.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsHigh() QuoteSummaryEsgScoresTotalEsg {
	if o == nil || o.EarningsHigh == nil {
		var ret QuoteSummaryEsgScoresTotalEsg
		return ret
	}
	return *o.EarningsHigh
}

// GetEarningsHighOk returns a tuple with the EarningsHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryCalendarEventsEarnings) GetEarningsHighOk() (*QuoteSummaryEsgScoresTotalEsg, bool) {
	if o == nil || o.EarningsHigh == nil {
		return nil, false
	}
	return o.EarningsHigh, true
}

// HasEarningsHigh returns a boolean if a field has been set.
func (o *QuoteSummaryCalendarEventsEarnings) HasEarningsHigh() bool {
	if o != nil && o.EarningsHigh != nil {
		return true
	}

	return false
}

// SetEarningsHigh gets a reference to the given QuoteSummaryEsgScoresTotalEsg and assigns it to the EarningsHigh field.
func (o *QuoteSummaryCalendarEventsEarnings) SetEarningsHigh(v QuoteSummaryEsgScoresTotalEsg) {
	o.EarningsHigh = &v
}

// GetRevenueAverage returns the RevenueAverage field value if set, zero value otherwise.
func (o *QuoteSummaryCalendarEventsEarnings) GetRevenueAverage() QuoteSummaryDefaultKeyStatisticsEnterpriseValue {
	if o == nil || o.RevenueAverage == nil {
		var ret QuoteSummaryDefaultKeyStatisticsEnterpriseValue
		return ret
	}
	return *o.RevenueAverage
}

// GetRevenueAverageOk returns a tuple with the RevenueAverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryCalendarEventsEarnings) GetRevenueAverageOk() (*QuoteSummaryDefaultKeyStatisticsEnterpriseValue, bool) {
	if o == nil || o.RevenueAverage == nil {
		return nil, false
	}
	return o.RevenueAverage, true
}

// HasRevenueAverage returns a boolean if a field has been set.
func (o *QuoteSummaryCalendarEventsEarnings) HasRevenueAverage() bool {
	if o != nil && o.RevenueAverage != nil {
		return true
	}

	return false
}

// SetRevenueAverage gets a reference to the given QuoteSummaryDefaultKeyStatisticsEnterpriseValue and assigns it to the RevenueAverage field.
func (o *QuoteSummaryCalendarEventsEarnings) SetRevenueAverage(v QuoteSummaryDefaultKeyStatisticsEnterpriseValue) {
	o.RevenueAverage = &v
}

// GetRevenueLow returns the RevenueLow field value if set, zero value otherwise.
func (o *QuoteSummaryCalendarEventsEarnings) GetRevenueLow() QuoteSummaryDefaultKeyStatisticsEnterpriseValue {
	if o == nil || o.RevenueLow == nil {
		var ret QuoteSummaryDefaultKeyStatisticsEnterpriseValue
		return ret
	}
	return *o.RevenueLow
}

// GetRevenueLowOk returns a tuple with the RevenueLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryCalendarEventsEarnings) GetRevenueLowOk() (*QuoteSummaryDefaultKeyStatisticsEnterpriseValue, bool) {
	if o == nil || o.RevenueLow == nil {
		return nil, false
	}
	return o.RevenueLow, true
}

// HasRevenueLow returns a boolean if a field has been set.
func (o *QuoteSummaryCalendarEventsEarnings) HasRevenueLow() bool {
	if o != nil && o.RevenueLow != nil {
		return true
	}

	return false
}

// SetRevenueLow gets a reference to the given QuoteSummaryDefaultKeyStatisticsEnterpriseValue and assigns it to the RevenueLow field.
func (o *QuoteSummaryCalendarEventsEarnings) SetRevenueLow(v QuoteSummaryDefaultKeyStatisticsEnterpriseValue) {
	o.RevenueLow = &v
}

// GetRevenueHigh returns the RevenueHigh field value if set, zero value otherwise.
func (o *QuoteSummaryCalendarEventsEarnings) GetRevenueHigh() QuoteSummaryDefaultKeyStatisticsEnterpriseValue {
	if o == nil || o.RevenueHigh == nil {
		var ret QuoteSummaryDefaultKeyStatisticsEnterpriseValue
		return ret
	}
	return *o.RevenueHigh
}

// GetRevenueHighOk returns a tuple with the RevenueHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteSummaryCalendarEventsEarnings) GetRevenueHighOk() (*QuoteSummaryDefaultKeyStatisticsEnterpriseValue, bool) {
	if o == nil || o.RevenueHigh == nil {
		return nil, false
	}
	return o.RevenueHigh, true
}

// HasRevenueHigh returns a boolean if a field has been set.
func (o *QuoteSummaryCalendarEventsEarnings) HasRevenueHigh() bool {
	if o != nil && o.RevenueHigh != nil {
		return true
	}

	return false
}

// SetRevenueHigh gets a reference to the given QuoteSummaryDefaultKeyStatisticsEnterpriseValue and assigns it to the RevenueHigh field.
func (o *QuoteSummaryCalendarEventsEarnings) SetRevenueHigh(v QuoteSummaryDefaultKeyStatisticsEnterpriseValue) {
	o.RevenueHigh = &v
}

func (o QuoteSummaryCalendarEventsEarnings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EarningsDate != nil {
		toSerialize["earningsDate"] = o.EarningsDate
	}
	if o.EarningsAverage != nil {
		toSerialize["earningsAverage"] = o.EarningsAverage
	}
	if o.EarningsLow != nil {
		toSerialize["earningsLow"] = o.EarningsLow
	}
	if o.EarningsHigh != nil {
		toSerialize["earningsHigh"] = o.EarningsHigh
	}
	if o.RevenueAverage != nil {
		toSerialize["revenueAverage"] = o.RevenueAverage
	}
	if o.RevenueLow != nil {
		toSerialize["revenueLow"] = o.RevenueLow
	}
	if o.RevenueHigh != nil {
		toSerialize["revenueHigh"] = o.RevenueHigh
	}
	return json.Marshal(toSerialize)
}

type NullableQuoteSummaryCalendarEventsEarnings struct {
	value *QuoteSummaryCalendarEventsEarnings
	isSet bool
}

func (v NullableQuoteSummaryCalendarEventsEarnings) Get() *QuoteSummaryCalendarEventsEarnings {
	return v.value
}

func (v *NullableQuoteSummaryCalendarEventsEarnings) Set(val *QuoteSummaryCalendarEventsEarnings) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteSummaryCalendarEventsEarnings) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteSummaryCalendarEventsEarnings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteSummaryCalendarEventsEarnings(val *QuoteSummaryCalendarEventsEarnings) *NullableQuoteSummaryCalendarEventsEarnings {
	return &NullableQuoteSummaryCalendarEventsEarnings{value: val, isSet: true}
}

func (v NullableQuoteSummaryCalendarEventsEarnings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteSummaryCalendarEventsEarnings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


